def add(Z, x)   |> { return (x) to add }
 or add(S x, y) |> { return (add(x, S y)) to add }
 or fib(Z)      |> { return (S Z) to fib }
 or fib(S Z)    |> { return (S Z) to fib }
 or fib(S S x)  |> { return (add(fib(x), fib(S x))) to fib }
 in { match fib(S S S S S S S S S Z) with
          Z -> { run wasZero<> }
        | S Z -> { run wasOne<> }
        | S S S Z -> { run wasThree<> }
        | x -> { run wasSomethingElse<x> };
      run finished<>
    }
